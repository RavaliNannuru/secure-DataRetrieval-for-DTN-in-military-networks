/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package secure;


import java.util.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;

import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

public class Measure extends javax.swing.JFrame {

    /**
     * Creates new form Measure
     */
	 String loc="",user="";
    public Measure() {
		initComponents();
		getContentPane().setBackground(new java.awt.Color(102, 102, 255));
         
        

            try {
            Connections cns=new Connections();
            Connection con = cns.con;
            Statement stmt=con.createStatement();
            
			
            File file = new File(System.getProperty("user.home") + "\\"+"Desktop\\Downloads");
            if(file.exists()){
            System.out.println("File Exists");
            }else{
            boolean wasDirecotyMade = file.mkdirs();
            if(wasDirecotyMade)System.out.println("Direcoty Created");
            else System.out.println("Sorry could not create directory");
			
			
            }
			File file11 = new File("C:\\storage\\");
			File[] file22=file11.listFiles();
			for(File file33:file22)
			{
			if (file33.isDirectory())
			{
			loc=file33.getName();
			File file1 = new File("C:\\storage\\"+loc);
			File[] file2=file1.listFiles();
			for(File file3:file2)
			{
				if(file3.isFile())
				jComboBox2.addItem(file3.getName());
			}
			}			
			}			
        } catch (SQLException ex) {
            //Logger.getLogger(Measure.class.getName()).log(Level.SEVERE, null, ex);
        }
            

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("File");

        jComboBox2.setMaximumRowCount(200);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("Select file");

        jButton2.setText("Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton2)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                 
        int i; 
        FileInputStream fin=null; 
        FileOutputStream fout=null; 
       
        Object filename;
        filename = jComboBox2.getSelectedItem();
        String desktopPath =System.getProperty("user.home") + "\\"+"Desktop\\Downloads\\";
        
        try { 
        
        Connection con=new Connections().con;
        Statement stmt=con.createStatement();
        String name="";
		Statement stmt1=con.createStatement();
        java.sql.ResultSet rs=stmt1.executeQuery("select * from userdetails where name=(select distinct name from filedetails where filename='"+filename+"')");
		rs.next();
		name=rs.getString(2);
		DESedeEncryption myEncryptor= new DESedeEncryption(name.trim());
		
		AES.setKey(name);
		
		java.io.BufferedReader br = null;
		String sCurrentLine="",CurrentLine="";
		
		String find="";
		find=search(new File("C:\\storage\\"),(String)filename);
		find=(String)result.get(0);
		System.out.println(find);
		br = new java.io.BufferedReader(new java.io.FileReader(find));
		while ((CurrentLine = br.readLine()) != null) 
		{
				sCurrentLine=sCurrentLine+CurrentLine;
		}
		System.out.println(sCurrentLine);
		
		String decrypted=myEncryptor.decrypt(sCurrentLine.trim());
		System.out.println(decrypted);
		AES.encrypt(decrypted.trim());
		
		if (br != null)
		br.close();
		
		this.dispose();
		
		graph demo = new graph(sCurrentLine.length(),AES.getEncryptedString().length());
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);
		}
        catch(Exception e) 
		{ 
            System.out.println("File Error"); 
			JOptionPane.showMessageDialog(this, "DB connections failed");
        } 
        
       finally{
            try { 
                
            } catch (Exception ex) {
                Logger.getLogger(UploadFile.class.getName()).log(Level.SEVERE, null, ex);
            }
        

        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
	
	public String search(File file,String filename)
	{
	String find="";
	if (file.isDirectory()) 
	{
	  System.out.println("Searching directory ... " + file.getAbsoluteFile());
 
            //do you have permission to read this directory?	
	    if (file.canRead()) 
		{
		for (File temp : file.listFiles()) 
		{
		    if (temp.isDirectory()) 
			{
			search(temp,filename);
		    } 
			else 
			{
			if (filename.toLowerCase().equals(temp.getName().toLowerCase())) 
			{			
			    result.add(temp.getAbsoluteFile().toString());
				find=temp.getAbsoluteFile().toString();
				System.out.println(find);
				return find;
				//break;
		    }
 
		}
	    }
 
	 } 
	 else 
	 {
		System.out.println(file.getAbsoluteFile() + "Permission Denied");
	 }
     }
	 return find;
	 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
		
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Measure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Measure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Measure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Measure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Measure().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
	private List<String> result = new ArrayList<String>();
    // End of variables declaration//GEN-END:variables
}
