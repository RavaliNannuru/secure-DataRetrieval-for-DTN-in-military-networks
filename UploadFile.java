/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package secure;

import com.sun.media.sound.JARSoundbankReader;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;



public class UploadFile extends javax.swing.JFrame {

    /**
     * Creates new form UploadFile
     */
	 String loc="",user="";
    public UploadFile(String na,String na1) {
		loc=na;
		user=na1;
        initComponents();
        jFileChooser1.setVisible(false);
        setSize(400, 108);
        jButton2.setVisible(false);
		getContentPane().setBackground(new java.awt.Color(102, 102, 255));
        
        File file = new File("C:\\storage\\"+loc);
        if(file.exists()){
        System.out.println("File Exists");
        }else{
        boolean wasDirecotyMade = file.mkdirs();
        if(wasDirecotyMade)System.out.println("Direcoty Created");
        else System.out.println("Sorry could not create directory");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Upload File");

        jTextField1.setEditable(false);

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 317, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        setSize(582, 434);
        jFileChooser1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    String filename,filepath;
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed

        
        File file = jFileChooser1.getSelectedFile();
        filename = file.getName();
        filepath = file.toString();
        
        jTextField1.setText(filename);
        if(file!=null)
        {
            jButton1.setVisible(false);
            jButton2.setVisible(true);
            setSize(400, 108);
            jFileChooser1.setVisible(false);
        }
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        int i; 
        FileInputStream fin=null; 
        FileOutputStream fout=null; 
       
        try { 
        File f=new File(filepath);
		//java.text.DateFormat format = new java.text.SimpleDateFormat("yyyy:MM:dd HH:mm:ss");
		//java.util.Date date=new java.util.Date();
		//String day=format.format(date);
		
		//java.util.Random ran=new java.util.Random();
		//int r=ran.nextInt(10);
		
		//System.out.println(day+" "+r);
        Connection con=new Connections().con;
        Statement stmt=con.createStatement();
		Statement stmt1=con.createStatement();
        java.sql.ResultSet rs=stmt1.executeQuery("select * from userdetails where name='"+user+"'");
		rs.next();
		DESedeEncryption myEncryptor= new DESedeEncryption(rs.getString(2));
		
		java.io.BufferedReader br = null;
		String sCurrentLine="",CurrentLine="";
		
		br = new java.io.BufferedReader(new java.io.FileReader(filepath));
		while ((CurrentLine = br.readLine()) != null) 
		{
				sCurrentLine=sCurrentLine+" "+CurrentLine;
		}
		String encrypted=myEncryptor.encrypt(sCurrentLine);
		System.out.println(encrypted);
		java.io.FileWriter fw = new java.io.FileWriter("C:\\storage\\"+loc+"\\"+filename);
		java.io.BufferedWriter bw = new java.io.BufferedWriter(fw);
		bw.write(encrypted);
		if (br != null)
		br.close();
		if (bw != null)
		bw.close();
		
        String qry="insert into filedetails(name,filename) values('"+user+"','"+filename+"')";
        int result = stmt.executeUpdate(qry);
                
                if(result==1) 
				{
                    JOptionPane.showMessageDialog(this,"File Uploaded Successfully");            
                    this.dispose();
                }
             else
                    JOptionPane.showMessageDialog(this, "DB connections failed");
            }
        
        catch (SQLException ex) { 
            Logger.getLogger(UploadFile.class.getName()).log(Level.SEVERE, null, ex);
        }  
		catch (Exception ex) {
                Logger.getLogger(UploadFile.class.getName()).log(Level.SEVERE, null, ex);
            }
        
       finally{
            try { 
                
                
            } catch (Exception ex) {
                Logger.getLogger(UploadFile.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
		
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadFile("","").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
